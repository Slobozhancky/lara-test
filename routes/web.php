<?php

use App\Http\Controllers\FirstController;
use Illuminate\Support\Facades\Route;

/**
 * Route::get: Це метод, який вказує, що цей маршрут реагує на HTTP GET запити.
 *'/': Це URL-шлях, який вказує на кореневу сторінку додатку. Тобто, коли користувач відкриває базову адресу вашого
 * веб-сайту (наприклад, http://example.com/), виконається цей маршрут.
 *
 * [FirstController::class, 'index']: Це масив, в якому перший елемент вказує на клас контролера, який буде відповідати
 * за обробку запиту, а другий елемент - на метод цього контролера, який буде викликаний для обробки запиту.
 * У цьому випадку, коли виконується маршрут '/', буде виконано метод 'index' контролера 'FirstController'.
 */

Route::get('/', [FirstController::class, 'index']);

//Route::get('/', function () {
//    return view('welcome');
//});

//Route::get('/admin', function () {
//    return 'Admin';
//});
//
//Route::get('/admin/posts', function () {
//    return 'Admin posts page';
//});
//
//Route::get('/admin/posts/{id}', function ($id) {
//    return "Admin post page: {$id}";
//});

/**
 * Групування маршрутів, може нам допомогти таким чином, що за умови, якщо у нас є один префікс, до якого відносяться
 * прилягаючі до нього маршрути, то вказавши (створивши) групу, в нас буде змога, для прилягаючих маршрутів, нге
 * прописувати назву префіксу (назви його групи)
 */

Route::prefix('admin')->group(function (){
    Route::get('/', function () {
        return 'Admin';
    });

    Route::get('/posts', function () {
        return 'Admin posts page';
    });

    Route::get('/posts/{id}', function ($id) {
        return "Admin post page: {$id}";
    });
});

/**
 * Метод Route::fallback в Laravel використовується для визначення маршруту, який буде виконуватися, коли жоден інший
 * маршрут не відповідає запиту. Він діє як останній резервний маршрут, який буде виконуватися, коли фреймворк не може
 * знайти відповідний маршрут для URL.
 *
 * Основна мета Route::fallback - це забезпечити контроль над поведінкою вашого додатку у випадках, коли користувач
 * звертається до неіснуючої сторінки або маршруту. Ви можете використовувати його для повернення стандартної сторінки
 * 404 (сторінки не знайдено), або для виконання певної дії, наприклад, перенаправлення на головну сторінку.
 *
 * !!! Запасний маршрут завжди повинен бути останнім маршрутом, зареєстрованим вашим додатком.
 */

//Route::fallback(function (){
//    return response("404", 404, );
//});

/**
 * На випадок, якщо нам потрібно передати якісь дані, у форматі JSON при, умові що спрацює метод Route::fallback
 */

Route::fallback(function (){
    return response()->json(['404' => 'page not found'], 404);
});

