<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

/**
 * Метод __invoke в PHP використовується для того, щоб дозволити об'єктам класу бути викликаними як функції.
 * У контексті фреймворку Laravel, його можна використовувати для створення об'єктів, які можна викликати як контролери.
 *
 * Ось як це працює:
 *
 * Зручний синтаксис: Замість визначення методу з певною назвою (наприклад, index або handle), ви можете просто
 * визначити метод __invoke в класі контролера. Це робить код більш зручним і природнім, особливо коли клас відповідає
 * за один конкретний вид дії.
 *
 * Спрощення: Якщо клас контролера використовується лише для одного типу дії, то визначення лише методу __invoke може
 * спростити код і зробити його більш зрозумілим.
 *
 * Функціональний стиль програмування: Використання методу __invoke може підтримувати функціональний стиль
 * програмування, де об'єкти розглядаються як функції і можуть бути викликані безпосередньо.
*/
class TestController extends Controller
{
    /**
     * Нижче зображено приклад функції compact, яка дозволить помістити звичайні змінні в масив, де назва змінної
     * буде ключем, за яким ми зможемо звернутись до цієї змінної
     */
    public function __invoke(Request $request)
    {
        $title = 'Test page';
        $name = 'Bob';
        $age = 20;

        return view('home.test', compact('title', 'name', 'age'));
    }
}
